// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hpc.msg

#ifndef GOOGLE_PROTOBUF_INCLUDED_hpc_2emsg
#define GOOGLE_PROTOBUF_INCLUDED_hpc_2emsg

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_hpc_2emsg
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_hpc_2emsg {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hpc_2emsg;
namespace hpc {
class cmd_begin_reply;
class cmd_begin_replyDefaultTypeInternal;
extern cmd_begin_replyDefaultTypeInternal _cmd_begin_reply_default_instance_;
class cmd_config_reply;
class cmd_config_replyDefaultTypeInternal;
extern cmd_config_replyDefaultTypeInternal _cmd_config_reply_default_instance_;
class cmd_get_data_reply;
class cmd_get_data_replyDefaultTypeInternal;
extern cmd_get_data_replyDefaultTypeInternal _cmd_get_data_reply_default_instance_;
class cmd_test_reg_reply;
class cmd_test_reg_replyDefaultTypeInternal;
extern cmd_test_reg_replyDefaultTypeInternal _cmd_test_reg_reply_default_instance_;
class cmd_tx_data_reply;
class cmd_tx_data_replyDefaultTypeInternal;
extern cmd_tx_data_replyDefaultTypeInternal _cmd_tx_data_reply_default_instance_;
class simple_cmd_reply;
class simple_cmd_replyDefaultTypeInternal;
extern simple_cmd_replyDefaultTypeInternal _simple_cmd_reply_default_instance_;
class simple_cmd_reply_data;
class simple_cmd_reply_dataDefaultTypeInternal;
extern simple_cmd_reply_dataDefaultTypeInternal _simple_cmd_reply_data_default_instance_;
}  // namespace hpc
PROTOBUF_NAMESPACE_OPEN
template<> ::hpc::cmd_begin_reply* Arena::CreateMaybeMessage<::hpc::cmd_begin_reply>(Arena*);
template<> ::hpc::cmd_config_reply* Arena::CreateMaybeMessage<::hpc::cmd_config_reply>(Arena*);
template<> ::hpc::cmd_get_data_reply* Arena::CreateMaybeMessage<::hpc::cmd_get_data_reply>(Arena*);
template<> ::hpc::cmd_test_reg_reply* Arena::CreateMaybeMessage<::hpc::cmd_test_reg_reply>(Arena*);
template<> ::hpc::cmd_tx_data_reply* Arena::CreateMaybeMessage<::hpc::cmd_tx_data_reply>(Arena*);
template<> ::hpc::simple_cmd_reply* Arena::CreateMaybeMessage<::hpc::simple_cmd_reply>(Arena*);
template<> ::hpc::simple_cmd_reply_data* Arena::CreateMaybeMessage<::hpc::simple_cmd_reply_data>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace hpc {

// ===================================================================

class simple_cmd_reply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hpc.simple_cmd_reply) */ {
 public:
  inline simple_cmd_reply() : simple_cmd_reply(nullptr) {};
  virtual ~simple_cmd_reply();

  simple_cmd_reply(const simple_cmd_reply& from);
  simple_cmd_reply(simple_cmd_reply&& from) noexcept
    : simple_cmd_reply() {
    *this = ::std::move(from);
  }

  inline simple_cmd_reply& operator=(const simple_cmd_reply& from) {
    CopyFrom(from);
    return *this;
  }
  inline simple_cmd_reply& operator=(simple_cmd_reply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const simple_cmd_reply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const simple_cmd_reply* internal_default_instance() {
    return reinterpret_cast<const simple_cmd_reply*>(
               &_simple_cmd_reply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(simple_cmd_reply& a, simple_cmd_reply& b) {
    a.Swap(&b);
  }
  inline void Swap(simple_cmd_reply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(simple_cmd_reply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline simple_cmd_reply* New() const final {
    return CreateMaybeMessage<simple_cmd_reply>(nullptr);
  }

  simple_cmd_reply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<simple_cmd_reply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const simple_cmd_reply& from);
  void MergeFrom(const simple_cmd_reply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(simple_cmd_reply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hpc.simple_cmd_reply";
  }
  protected:
  explicit simple_cmd_reply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hpc_2emsg);
    return ::descriptor_table_hpc_2emsg.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPreambleFieldNumber = 1,
    kLenFieldNumber = 2,
    kVersionFieldNumber = 3,
    kTotalPackageLenFieldNumber = 4,
    kSeqFieldNumber = 5,
    kFlagFieldNumber = 6,
    kCmdFieldNumber = 7,
    kRtcodeFieldNumber = 8,
  };
  // uint32 preamble = 1;
  void clear_preamble();
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble() const;
  void set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preamble() const;
  void _internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 len = 2;
  void clear_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 len() const;
  void set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_len() const;
  void _internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 version = 3;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_package_len = 4;
  void clear_total_package_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len() const;
  void set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_package_len() const;
  void _internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 seq = 5;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint32 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 flag = 6;
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flag() const;
  void _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cmd = 7;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 rtcode = 8;
  void clear_rtcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtcode() const;
  void set_rtcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtcode() const;
  void _internal_set_rtcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hpc.simple_cmd_reply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble_;
  ::PROTOBUF_NAMESPACE_ID::uint32 len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flag_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hpc_2emsg;
};
// -------------------------------------------------------------------

class simple_cmd_reply_data PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hpc.simple_cmd_reply_data) */ {
 public:
  inline simple_cmd_reply_data() : simple_cmd_reply_data(nullptr) {};
  virtual ~simple_cmd_reply_data();

  simple_cmd_reply_data(const simple_cmd_reply_data& from);
  simple_cmd_reply_data(simple_cmd_reply_data&& from) noexcept
    : simple_cmd_reply_data() {
    *this = ::std::move(from);
  }

  inline simple_cmd_reply_data& operator=(const simple_cmd_reply_data& from) {
    CopyFrom(from);
    return *this;
  }
  inline simple_cmd_reply_data& operator=(simple_cmd_reply_data&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const simple_cmd_reply_data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const simple_cmd_reply_data* internal_default_instance() {
    return reinterpret_cast<const simple_cmd_reply_data*>(
               &_simple_cmd_reply_data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(simple_cmd_reply_data& a, simple_cmd_reply_data& b) {
    a.Swap(&b);
  }
  inline void Swap(simple_cmd_reply_data* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(simple_cmd_reply_data* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline simple_cmd_reply_data* New() const final {
    return CreateMaybeMessage<simple_cmd_reply_data>(nullptr);
  }

  simple_cmd_reply_data* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<simple_cmd_reply_data>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const simple_cmd_reply_data& from);
  void MergeFrom(const simple_cmd_reply_data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(simple_cmd_reply_data* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hpc.simple_cmd_reply_data";
  }
  protected:
  explicit simple_cmd_reply_data(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hpc_2emsg);
    return ::descriptor_table_hpc_2emsg.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDatabufFieldNumber = 9,
    kPreambleFieldNumber = 1,
    kLenFieldNumber = 2,
    kVersionFieldNumber = 3,
    kTotalPackageLenFieldNumber = 4,
    kSeqFieldNumber = 5,
    kFlagFieldNumber = 6,
    kCmdFieldNumber = 7,
    kRtcodeFieldNumber = 8,
  };
  // string databuf = 9;
  void clear_databuf();
  const std::string& databuf() const;
  void set_databuf(const std::string& value);
  void set_databuf(std::string&& value);
  void set_databuf(const char* value);
  void set_databuf(const char* value, size_t size);
  std::string* mutable_databuf();
  std::string* release_databuf();
  void set_allocated_databuf(std::string* databuf);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_databuf();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_databuf(
      std::string* databuf);
  private:
  const std::string& _internal_databuf() const;
  void _internal_set_databuf(const std::string& value);
  std::string* _internal_mutable_databuf();
  public:

  // uint32 preamble = 1;
  void clear_preamble();
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble() const;
  void set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preamble() const;
  void _internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 len = 2;
  void clear_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 len() const;
  void set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_len() const;
  void _internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 version = 3;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_package_len = 4;
  void clear_total_package_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len() const;
  void set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_package_len() const;
  void _internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 seq = 5;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint32 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 flag = 6;
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flag() const;
  void _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cmd = 7;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 rtcode = 8;
  void clear_rtcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtcode() const;
  void set_rtcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtcode() const;
  void _internal_set_rtcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hpc.simple_cmd_reply_data)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr databuf_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble_;
  ::PROTOBUF_NAMESPACE_ID::uint32 len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flag_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hpc_2emsg;
};
// -------------------------------------------------------------------

class cmd_begin_reply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hpc.cmd_begin_reply) */ {
 public:
  inline cmd_begin_reply() : cmd_begin_reply(nullptr) {};
  virtual ~cmd_begin_reply();

  cmd_begin_reply(const cmd_begin_reply& from);
  cmd_begin_reply(cmd_begin_reply&& from) noexcept
    : cmd_begin_reply() {
    *this = ::std::move(from);
  }

  inline cmd_begin_reply& operator=(const cmd_begin_reply& from) {
    CopyFrom(from);
    return *this;
  }
  inline cmd_begin_reply& operator=(cmd_begin_reply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const cmd_begin_reply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmd_begin_reply* internal_default_instance() {
    return reinterpret_cast<const cmd_begin_reply*>(
               &_cmd_begin_reply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(cmd_begin_reply& a, cmd_begin_reply& b) {
    a.Swap(&b);
  }
  inline void Swap(cmd_begin_reply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(cmd_begin_reply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline cmd_begin_reply* New() const final {
    return CreateMaybeMessage<cmd_begin_reply>(nullptr);
  }

  cmd_begin_reply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<cmd_begin_reply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const cmd_begin_reply& from);
  void MergeFrom(const cmd_begin_reply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmd_begin_reply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hpc.cmd_begin_reply";
  }
  protected:
  explicit cmd_begin_reply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hpc_2emsg);
    return ::descriptor_table_hpc_2emsg.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInterruptPathFieldNumber = 9,
    kPreambleFieldNumber = 1,
    kLenFieldNumber = 2,
    kVersionFieldNumber = 3,
    kTotalPackageLenFieldNumber = 4,
    kSeqFieldNumber = 5,
    kFlagFieldNumber = 6,
    kBaseAddressFieldNumber = 8,
    kCmdFieldNumber = 7,
  };
  // string interrupt_path = 9;
  void clear_interrupt_path();
  const std::string& interrupt_path() const;
  void set_interrupt_path(const std::string& value);
  void set_interrupt_path(std::string&& value);
  void set_interrupt_path(const char* value);
  void set_interrupt_path(const char* value, size_t size);
  std::string* mutable_interrupt_path();
  std::string* release_interrupt_path();
  void set_allocated_interrupt_path(std::string* interrupt_path);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_interrupt_path();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_interrupt_path(
      std::string* interrupt_path);
  private:
  const std::string& _internal_interrupt_path() const;
  void _internal_set_interrupt_path(const std::string& value);
  std::string* _internal_mutable_interrupt_path();
  public:

  // uint32 preamble = 1;
  void clear_preamble();
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble() const;
  void set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preamble() const;
  void _internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 len = 2;
  void clear_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 len() const;
  void set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_len() const;
  void _internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 version = 3;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_package_len = 4;
  void clear_total_package_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len() const;
  void set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_package_len() const;
  void _internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 seq = 5;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint32 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 flag = 6;
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flag() const;
  void _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 base_address = 8;
  void clear_base_address();
  ::PROTOBUF_NAMESPACE_ID::uint64 base_address() const;
  void set_base_address(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_base_address() const;
  void _internal_set_base_address(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 cmd = 7;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hpc.cmd_begin_reply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr interrupt_path_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble_;
  ::PROTOBUF_NAMESPACE_ID::uint32 len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flag_;
  ::PROTOBUF_NAMESPACE_ID::uint64 base_address_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hpc_2emsg;
};
// -------------------------------------------------------------------

class cmd_tx_data_reply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hpc.cmd_tx_data_reply) */ {
 public:
  inline cmd_tx_data_reply() : cmd_tx_data_reply(nullptr) {};
  virtual ~cmd_tx_data_reply();

  cmd_tx_data_reply(const cmd_tx_data_reply& from);
  cmd_tx_data_reply(cmd_tx_data_reply&& from) noexcept
    : cmd_tx_data_reply() {
    *this = ::std::move(from);
  }

  inline cmd_tx_data_reply& operator=(const cmd_tx_data_reply& from) {
    CopyFrom(from);
    return *this;
  }
  inline cmd_tx_data_reply& operator=(cmd_tx_data_reply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const cmd_tx_data_reply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmd_tx_data_reply* internal_default_instance() {
    return reinterpret_cast<const cmd_tx_data_reply*>(
               &_cmd_tx_data_reply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(cmd_tx_data_reply& a, cmd_tx_data_reply& b) {
    a.Swap(&b);
  }
  inline void Swap(cmd_tx_data_reply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(cmd_tx_data_reply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline cmd_tx_data_reply* New() const final {
    return CreateMaybeMessage<cmd_tx_data_reply>(nullptr);
  }

  cmd_tx_data_reply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<cmd_tx_data_reply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const cmd_tx_data_reply& from);
  void MergeFrom(const cmd_tx_data_reply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmd_tx_data_reply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hpc.cmd_tx_data_reply";
  }
  protected:
  explicit cmd_tx_data_reply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hpc_2emsg);
    return ::descriptor_table_hpc_2emsg.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPreambleFieldNumber = 1,
    kLenFieldNumber = 2,
    kVersionFieldNumber = 3,
    kTotalPackageLenFieldNumber = 4,
    kSeqFieldNumber = 5,
    kFlagFieldNumber = 6,
    kInputAddressFieldNumber = 8,
    kCmdFieldNumber = 7,
  };
  // uint32 preamble = 1;
  void clear_preamble();
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble() const;
  void set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preamble() const;
  void _internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 len = 2;
  void clear_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 len() const;
  void set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_len() const;
  void _internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 version = 3;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_package_len = 4;
  void clear_total_package_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len() const;
  void set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_package_len() const;
  void _internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 seq = 5;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint32 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 flag = 6;
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flag() const;
  void _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 input_address = 8;
  void clear_input_address();
  ::PROTOBUF_NAMESPACE_ID::uint64 input_address() const;
  void set_input_address(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_input_address() const;
  void _internal_set_input_address(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 cmd = 7;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hpc.cmd_tx_data_reply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble_;
  ::PROTOBUF_NAMESPACE_ID::uint32 len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flag_;
  ::PROTOBUF_NAMESPACE_ID::uint64 input_address_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hpc_2emsg;
};
// -------------------------------------------------------------------

class cmd_get_data_reply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hpc.cmd_get_data_reply) */ {
 public:
  inline cmd_get_data_reply() : cmd_get_data_reply(nullptr) {};
  virtual ~cmd_get_data_reply();

  cmd_get_data_reply(const cmd_get_data_reply& from);
  cmd_get_data_reply(cmd_get_data_reply&& from) noexcept
    : cmd_get_data_reply() {
    *this = ::std::move(from);
  }

  inline cmd_get_data_reply& operator=(const cmd_get_data_reply& from) {
    CopyFrom(from);
    return *this;
  }
  inline cmd_get_data_reply& operator=(cmd_get_data_reply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const cmd_get_data_reply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmd_get_data_reply* internal_default_instance() {
    return reinterpret_cast<const cmd_get_data_reply*>(
               &_cmd_get_data_reply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(cmd_get_data_reply& a, cmd_get_data_reply& b) {
    a.Swap(&b);
  }
  inline void Swap(cmd_get_data_reply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(cmd_get_data_reply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline cmd_get_data_reply* New() const final {
    return CreateMaybeMessage<cmd_get_data_reply>(nullptr);
  }

  cmd_get_data_reply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<cmd_get_data_reply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const cmd_get_data_reply& from);
  void MergeFrom(const cmd_get_data_reply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmd_get_data_reply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hpc.cmd_get_data_reply";
  }
  protected:
  explicit cmd_get_data_reply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hpc_2emsg);
    return ::descriptor_table_hpc_2emsg.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 8,
    kPreambleFieldNumber = 1,
    kLenFieldNumber = 2,
    kVersionFieldNumber = 3,
    kTotalPackageLenFieldNumber = 4,
    kSeqFieldNumber = 5,
    kFlagFieldNumber = 6,
    kCmdFieldNumber = 7,
  };
  // string data = 8;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_data();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_data(
      std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // uint32 preamble = 1;
  void clear_preamble();
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble() const;
  void set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preamble() const;
  void _internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 len = 2;
  void clear_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 len() const;
  void set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_len() const;
  void _internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 version = 3;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_package_len = 4;
  void clear_total_package_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len() const;
  void set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_package_len() const;
  void _internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 seq = 5;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint32 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 flag = 6;
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flag() const;
  void _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cmd = 7;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hpc.cmd_get_data_reply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble_;
  ::PROTOBUF_NAMESPACE_ID::uint32 len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flag_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hpc_2emsg;
};
// -------------------------------------------------------------------

class cmd_config_reply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hpc.cmd_config_reply) */ {
 public:
  inline cmd_config_reply() : cmd_config_reply(nullptr) {};
  virtual ~cmd_config_reply();

  cmd_config_reply(const cmd_config_reply& from);
  cmd_config_reply(cmd_config_reply&& from) noexcept
    : cmd_config_reply() {
    *this = ::std::move(from);
  }

  inline cmd_config_reply& operator=(const cmd_config_reply& from) {
    CopyFrom(from);
    return *this;
  }
  inline cmd_config_reply& operator=(cmd_config_reply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const cmd_config_reply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmd_config_reply* internal_default_instance() {
    return reinterpret_cast<const cmd_config_reply*>(
               &_cmd_config_reply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(cmd_config_reply& a, cmd_config_reply& b) {
    a.Swap(&b);
  }
  inline void Swap(cmd_config_reply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(cmd_config_reply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline cmd_config_reply* New() const final {
    return CreateMaybeMessage<cmd_config_reply>(nullptr);
  }

  cmd_config_reply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<cmd_config_reply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const cmd_config_reply& from);
  void MergeFrom(const cmd_config_reply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmd_config_reply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hpc.cmd_config_reply";
  }
  protected:
  explicit cmd_config_reply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hpc_2emsg);
    return ::descriptor_table_hpc_2emsg.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 8,
    kPreambleFieldNumber = 1,
    kLenFieldNumber = 2,
    kVersionFieldNumber = 3,
    kTotalPackageLenFieldNumber = 4,
    kSeqFieldNumber = 5,
    kFlagFieldNumber = 6,
    kCmdFieldNumber = 7,
  };
  // string config = 8;
  void clear_config();
  const std::string& config() const;
  void set_config(const std::string& value);
  void set_config(std::string&& value);
  void set_config(const char* value);
  void set_config(const char* value, size_t size);
  std::string* mutable_config();
  std::string* release_config();
  void set_allocated_config(std::string* config);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_config();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_config(
      std::string* config);
  private:
  const std::string& _internal_config() const;
  void _internal_set_config(const std::string& value);
  std::string* _internal_mutable_config();
  public:

  // uint32 preamble = 1;
  void clear_preamble();
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble() const;
  void set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preamble() const;
  void _internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 len = 2;
  void clear_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 len() const;
  void set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_len() const;
  void _internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 version = 3;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_package_len = 4;
  void clear_total_package_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len() const;
  void set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_package_len() const;
  void _internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 seq = 5;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint32 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 flag = 6;
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flag() const;
  void _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cmd = 7;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hpc.cmd_config_reply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr config_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble_;
  ::PROTOBUF_NAMESPACE_ID::uint32 len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flag_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hpc_2emsg;
};
// -------------------------------------------------------------------

class cmd_test_reg_reply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hpc.cmd_test_reg_reply) */ {
 public:
  inline cmd_test_reg_reply() : cmd_test_reg_reply(nullptr) {};
  virtual ~cmd_test_reg_reply();

  cmd_test_reg_reply(const cmd_test_reg_reply& from);
  cmd_test_reg_reply(cmd_test_reg_reply&& from) noexcept
    : cmd_test_reg_reply() {
    *this = ::std::move(from);
  }

  inline cmd_test_reg_reply& operator=(const cmd_test_reg_reply& from) {
    CopyFrom(from);
    return *this;
  }
  inline cmd_test_reg_reply& operator=(cmd_test_reg_reply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const cmd_test_reg_reply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmd_test_reg_reply* internal_default_instance() {
    return reinterpret_cast<const cmd_test_reg_reply*>(
               &_cmd_test_reg_reply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(cmd_test_reg_reply& a, cmd_test_reg_reply& b) {
    a.Swap(&b);
  }
  inline void Swap(cmd_test_reg_reply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(cmd_test_reg_reply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline cmd_test_reg_reply* New() const final {
    return CreateMaybeMessage<cmd_test_reg_reply>(nullptr);
  }

  cmd_test_reg_reply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<cmd_test_reg_reply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const cmd_test_reg_reply& from);
  void MergeFrom(const cmd_test_reg_reply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmd_test_reg_reply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hpc.cmd_test_reg_reply";
  }
  protected:
  explicit cmd_test_reg_reply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hpc_2emsg);
    return ::descriptor_table_hpc_2emsg.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRegFieldNumber = 8,
    kPreambleFieldNumber = 1,
    kLenFieldNumber = 2,
    kVersionFieldNumber = 3,
    kTotalPackageLenFieldNumber = 4,
    kSeqFieldNumber = 5,
    kFlagFieldNumber = 6,
    kCmdFieldNumber = 7,
  };
  // string reg = 8;
  void clear_reg();
  const std::string& reg() const;
  void set_reg(const std::string& value);
  void set_reg(std::string&& value);
  void set_reg(const char* value);
  void set_reg(const char* value, size_t size);
  std::string* mutable_reg();
  std::string* release_reg();
  void set_allocated_reg(std::string* reg);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_reg();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reg(
      std::string* reg);
  private:
  const std::string& _internal_reg() const;
  void _internal_set_reg(const std::string& value);
  std::string* _internal_mutable_reg();
  public:

  // uint32 preamble = 1;
  void clear_preamble();
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble() const;
  void set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preamble() const;
  void _internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 len = 2;
  void clear_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 len() const;
  void set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_len() const;
  void _internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 version = 3;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_package_len = 4;
  void clear_total_package_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len() const;
  void set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_package_len() const;
  void _internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 seq = 5;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint32 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 flag = 6;
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flag() const;
  void _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cmd = 7;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hpc.cmd_test_reg_reply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble_;
  ::PROTOBUF_NAMESPACE_ID::uint32 len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_package_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flag_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hpc_2emsg;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// simple_cmd_reply

// uint32 preamble = 1;
inline void simple_cmd_reply::clear_preamble() {
  preamble_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::_internal_preamble() const {
  return preamble_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::preamble() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply.preamble)
  return _internal_preamble();
}
inline void simple_cmd_reply::_internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  preamble_ = value;
}
inline void simple_cmd_reply::set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preamble(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply.preamble)
}

// uint32 len = 2;
inline void simple_cmd_reply::clear_len() {
  len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::_internal_len() const {
  return len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::len() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply.len)
  return _internal_len();
}
inline void simple_cmd_reply::_internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  len_ = value;
}
inline void simple_cmd_reply::set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_len(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply.len)
}

// uint32 version = 3;
inline void simple_cmd_reply::clear_version() {
  version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::version() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply.version)
  return _internal_version();
}
inline void simple_cmd_reply::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  version_ = value;
}
inline void simple_cmd_reply::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply.version)
}

// uint32 total_package_len = 4;
inline void simple_cmd_reply::clear_total_package_len() {
  total_package_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::_internal_total_package_len() const {
  return total_package_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::total_package_len() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply.total_package_len)
  return _internal_total_package_len();
}
inline void simple_cmd_reply::_internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  total_package_len_ = value;
}
inline void simple_cmd_reply::set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_package_len(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply.total_package_len)
}

// uint32 seq = 5;
inline void simple_cmd_reply::clear_seq() {
  seq_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::seq() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply.seq)
  return _internal_seq();
}
inline void simple_cmd_reply::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  seq_ = value;
}
inline void simple_cmd_reply::set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply.seq)
}

// uint32 flag = 6;
inline void simple_cmd_reply::clear_flag() {
  flag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::_internal_flag() const {
  return flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::flag() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply.flag)
  return _internal_flag();
}
inline void simple_cmd_reply::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  flag_ = value;
}
inline void simple_cmd_reply::set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply.flag)
}

// uint32 cmd = 7;
inline void simple_cmd_reply::clear_cmd() {
  cmd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::cmd() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply.cmd)
  return _internal_cmd();
}
inline void simple_cmd_reply::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  cmd_ = value;
}
inline void simple_cmd_reply::set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply.cmd)
}

// uint32 rtcode = 8;
inline void simple_cmd_reply::clear_rtcode() {
  rtcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::_internal_rtcode() const {
  return rtcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply::rtcode() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply.rtcode)
  return _internal_rtcode();
}
inline void simple_cmd_reply::_internal_set_rtcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  rtcode_ = value;
}
inline void simple_cmd_reply::set_rtcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtcode(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply.rtcode)
}

// -------------------------------------------------------------------

// simple_cmd_reply_data

// uint32 preamble = 1;
inline void simple_cmd_reply_data::clear_preamble() {
  preamble_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::_internal_preamble() const {
  return preamble_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::preamble() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply_data.preamble)
  return _internal_preamble();
}
inline void simple_cmd_reply_data::_internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  preamble_ = value;
}
inline void simple_cmd_reply_data::set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preamble(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply_data.preamble)
}

// uint32 len = 2;
inline void simple_cmd_reply_data::clear_len() {
  len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::_internal_len() const {
  return len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::len() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply_data.len)
  return _internal_len();
}
inline void simple_cmd_reply_data::_internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  len_ = value;
}
inline void simple_cmd_reply_data::set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_len(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply_data.len)
}

// uint32 version = 3;
inline void simple_cmd_reply_data::clear_version() {
  version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::version() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply_data.version)
  return _internal_version();
}
inline void simple_cmd_reply_data::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  version_ = value;
}
inline void simple_cmd_reply_data::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply_data.version)
}

// uint32 total_package_len = 4;
inline void simple_cmd_reply_data::clear_total_package_len() {
  total_package_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::_internal_total_package_len() const {
  return total_package_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::total_package_len() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply_data.total_package_len)
  return _internal_total_package_len();
}
inline void simple_cmd_reply_data::_internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  total_package_len_ = value;
}
inline void simple_cmd_reply_data::set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_package_len(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply_data.total_package_len)
}

// uint32 seq = 5;
inline void simple_cmd_reply_data::clear_seq() {
  seq_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::seq() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply_data.seq)
  return _internal_seq();
}
inline void simple_cmd_reply_data::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  seq_ = value;
}
inline void simple_cmd_reply_data::set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply_data.seq)
}

// uint32 flag = 6;
inline void simple_cmd_reply_data::clear_flag() {
  flag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::_internal_flag() const {
  return flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::flag() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply_data.flag)
  return _internal_flag();
}
inline void simple_cmd_reply_data::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  flag_ = value;
}
inline void simple_cmd_reply_data::set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply_data.flag)
}

// uint32 cmd = 7;
inline void simple_cmd_reply_data::clear_cmd() {
  cmd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::cmd() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply_data.cmd)
  return _internal_cmd();
}
inline void simple_cmd_reply_data::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  cmd_ = value;
}
inline void simple_cmd_reply_data::set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply_data.cmd)
}

// uint32 rtcode = 8;
inline void simple_cmd_reply_data::clear_rtcode() {
  rtcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::_internal_rtcode() const {
  return rtcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 simple_cmd_reply_data::rtcode() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply_data.rtcode)
  return _internal_rtcode();
}
inline void simple_cmd_reply_data::_internal_set_rtcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  rtcode_ = value;
}
inline void simple_cmd_reply_data::set_rtcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtcode(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply_data.rtcode)
}

// string databuf = 9;
inline void simple_cmd_reply_data::clear_databuf() {
  databuf_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& simple_cmd_reply_data::databuf() const {
  // @@protoc_insertion_point(field_get:hpc.simple_cmd_reply_data.databuf)
  return _internal_databuf();
}
inline void simple_cmd_reply_data::set_databuf(const std::string& value) {
  _internal_set_databuf(value);
  // @@protoc_insertion_point(field_set:hpc.simple_cmd_reply_data.databuf)
}
inline std::string* simple_cmd_reply_data::mutable_databuf() {
  // @@protoc_insertion_point(field_mutable:hpc.simple_cmd_reply_data.databuf)
  return _internal_mutable_databuf();
}
inline const std::string& simple_cmd_reply_data::_internal_databuf() const {
  return databuf_.Get();
}
inline void simple_cmd_reply_data::_internal_set_databuf(const std::string& value) {

  databuf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void simple_cmd_reply_data::set_databuf(std::string&& value) {

  databuf_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:hpc.simple_cmd_reply_data.databuf)
}
inline void simple_cmd_reply_data::set_databuf(const char* value) {
  GOOGLE_DCHECK(value != nullptr);

  databuf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:hpc.simple_cmd_reply_data.databuf)
}
inline void simple_cmd_reply_data::set_databuf(const char* value,
    size_t size) {

  databuf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:hpc.simple_cmd_reply_data.databuf)
}
inline std::string* simple_cmd_reply_data::_internal_mutable_databuf() {

  return databuf_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* simple_cmd_reply_data::release_databuf() {
  // @@protoc_insertion_point(field_release:hpc.simple_cmd_reply_data.databuf)
  return databuf_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void simple_cmd_reply_data::set_allocated_databuf(std::string* databuf) {
  if (databuf != nullptr) {

  } else {

  }
  databuf_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), databuf,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:hpc.simple_cmd_reply_data.databuf)
}
inline std::string* simple_cmd_reply_data::unsafe_arena_release_databuf() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hpc.simple_cmd_reply_data.databuf)
  GOOGLE_DCHECK(GetArena() != nullptr);

  return databuf_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void simple_cmd_reply_data::unsafe_arena_set_allocated_databuf(
    std::string* databuf) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (databuf != nullptr) {

  } else {

  }
  databuf_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      databuf, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hpc.simple_cmd_reply_data.databuf)
}

// -------------------------------------------------------------------

// cmd_begin_reply

// uint32 preamble = 1;
inline void cmd_begin_reply::clear_preamble() {
  preamble_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::_internal_preamble() const {
  return preamble_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::preamble() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_begin_reply.preamble)
  return _internal_preamble();
}
inline void cmd_begin_reply::_internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  preamble_ = value;
}
inline void cmd_begin_reply::set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preamble(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_begin_reply.preamble)
}

// uint32 len = 2;
inline void cmd_begin_reply::clear_len() {
  len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::_internal_len() const {
  return len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::len() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_begin_reply.len)
  return _internal_len();
}
inline void cmd_begin_reply::_internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  len_ = value;
}
inline void cmd_begin_reply::set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_len(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_begin_reply.len)
}

// uint32 version = 3;
inline void cmd_begin_reply::clear_version() {
  version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::version() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_begin_reply.version)
  return _internal_version();
}
inline void cmd_begin_reply::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  version_ = value;
}
inline void cmd_begin_reply::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_begin_reply.version)
}

// uint32 total_package_len = 4;
inline void cmd_begin_reply::clear_total_package_len() {
  total_package_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::_internal_total_package_len() const {
  return total_package_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::total_package_len() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_begin_reply.total_package_len)
  return _internal_total_package_len();
}
inline void cmd_begin_reply::_internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  total_package_len_ = value;
}
inline void cmd_begin_reply::set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_package_len(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_begin_reply.total_package_len)
}

// uint32 seq = 5;
inline void cmd_begin_reply::clear_seq() {
  seq_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::seq() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_begin_reply.seq)
  return _internal_seq();
}
inline void cmd_begin_reply::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  seq_ = value;
}
inline void cmd_begin_reply::set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_begin_reply.seq)
}

// uint32 flag = 6;
inline void cmd_begin_reply::clear_flag() {
  flag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::_internal_flag() const {
  return flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::flag() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_begin_reply.flag)
  return _internal_flag();
}
inline void cmd_begin_reply::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  flag_ = value;
}
inline void cmd_begin_reply::set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_begin_reply.flag)
}

// uint32 cmd = 7;
inline void cmd_begin_reply::clear_cmd() {
  cmd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_begin_reply::cmd() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_begin_reply.cmd)
  return _internal_cmd();
}
inline void cmd_begin_reply::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  cmd_ = value;
}
inline void cmd_begin_reply::set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_begin_reply.cmd)
}

// uint64 base_address = 8;
inline void cmd_begin_reply::clear_base_address() {
  base_address_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 cmd_begin_reply::_internal_base_address() const {
  return base_address_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 cmd_begin_reply::base_address() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_begin_reply.base_address)
  return _internal_base_address();
}
inline void cmd_begin_reply::_internal_set_base_address(::PROTOBUF_NAMESPACE_ID::uint64 value) {

  base_address_ = value;
}
inline void cmd_begin_reply::set_base_address(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_base_address(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_begin_reply.base_address)
}

// string interrupt_path = 9;
inline void cmd_begin_reply::clear_interrupt_path() {
  interrupt_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& cmd_begin_reply::interrupt_path() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_begin_reply.interrupt_path)
  return _internal_interrupt_path();
}
inline void cmd_begin_reply::set_interrupt_path(const std::string& value) {
  _internal_set_interrupt_path(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_begin_reply.interrupt_path)
}
inline std::string* cmd_begin_reply::mutable_interrupt_path() {
  // @@protoc_insertion_point(field_mutable:hpc.cmd_begin_reply.interrupt_path)
  return _internal_mutable_interrupt_path();
}
inline const std::string& cmd_begin_reply::_internal_interrupt_path() const {
  return interrupt_path_.Get();
}
inline void cmd_begin_reply::_internal_set_interrupt_path(const std::string& value) {

  interrupt_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void cmd_begin_reply::set_interrupt_path(std::string&& value) {

  interrupt_path_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:hpc.cmd_begin_reply.interrupt_path)
}
inline void cmd_begin_reply::set_interrupt_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);

  interrupt_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:hpc.cmd_begin_reply.interrupt_path)
}
inline void cmd_begin_reply::set_interrupt_path(const char* value,
    size_t size) {

  interrupt_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:hpc.cmd_begin_reply.interrupt_path)
}
inline std::string* cmd_begin_reply::_internal_mutable_interrupt_path() {

  return interrupt_path_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* cmd_begin_reply::release_interrupt_path() {
  // @@protoc_insertion_point(field_release:hpc.cmd_begin_reply.interrupt_path)
  return interrupt_path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void cmd_begin_reply::set_allocated_interrupt_path(std::string* interrupt_path) {
  if (interrupt_path != nullptr) {

  } else {

  }
  interrupt_path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), interrupt_path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:hpc.cmd_begin_reply.interrupt_path)
}
inline std::string* cmd_begin_reply::unsafe_arena_release_interrupt_path() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hpc.cmd_begin_reply.interrupt_path)
  GOOGLE_DCHECK(GetArena() != nullptr);

  return interrupt_path_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void cmd_begin_reply::unsafe_arena_set_allocated_interrupt_path(
    std::string* interrupt_path) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (interrupt_path != nullptr) {

  } else {

  }
  interrupt_path_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      interrupt_path, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hpc.cmd_begin_reply.interrupt_path)
}

// -------------------------------------------------------------------

// cmd_tx_data_reply

// uint32 preamble = 1;
inline void cmd_tx_data_reply::clear_preamble() {
  preamble_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::_internal_preamble() const {
  return preamble_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::preamble() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_tx_data_reply.preamble)
  return _internal_preamble();
}
inline void cmd_tx_data_reply::_internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  preamble_ = value;
}
inline void cmd_tx_data_reply::set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preamble(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_tx_data_reply.preamble)
}

// uint32 len = 2;
inline void cmd_tx_data_reply::clear_len() {
  len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::_internal_len() const {
  return len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::len() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_tx_data_reply.len)
  return _internal_len();
}
inline void cmd_tx_data_reply::_internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  len_ = value;
}
inline void cmd_tx_data_reply::set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_len(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_tx_data_reply.len)
}

// uint32 version = 3;
inline void cmd_tx_data_reply::clear_version() {
  version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::version() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_tx_data_reply.version)
  return _internal_version();
}
inline void cmd_tx_data_reply::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  version_ = value;
}
inline void cmd_tx_data_reply::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_tx_data_reply.version)
}

// uint32 total_package_len = 4;
inline void cmd_tx_data_reply::clear_total_package_len() {
  total_package_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::_internal_total_package_len() const {
  return total_package_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::total_package_len() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_tx_data_reply.total_package_len)
  return _internal_total_package_len();
}
inline void cmd_tx_data_reply::_internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  total_package_len_ = value;
}
inline void cmd_tx_data_reply::set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_package_len(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_tx_data_reply.total_package_len)
}

// uint32 seq = 5;
inline void cmd_tx_data_reply::clear_seq() {
  seq_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::seq() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_tx_data_reply.seq)
  return _internal_seq();
}
inline void cmd_tx_data_reply::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  seq_ = value;
}
inline void cmd_tx_data_reply::set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_tx_data_reply.seq)
}

// uint32 flag = 6;
inline void cmd_tx_data_reply::clear_flag() {
  flag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::_internal_flag() const {
  return flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::flag() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_tx_data_reply.flag)
  return _internal_flag();
}
inline void cmd_tx_data_reply::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  flag_ = value;
}
inline void cmd_tx_data_reply::set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_tx_data_reply.flag)
}

// uint32 cmd = 7;
inline void cmd_tx_data_reply::clear_cmd() {
  cmd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_tx_data_reply::cmd() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_tx_data_reply.cmd)
  return _internal_cmd();
}
inline void cmd_tx_data_reply::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  cmd_ = value;
}
inline void cmd_tx_data_reply::set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_tx_data_reply.cmd)
}

// uint64 input_address = 8;
inline void cmd_tx_data_reply::clear_input_address() {
  input_address_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 cmd_tx_data_reply::_internal_input_address() const {
  return input_address_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 cmd_tx_data_reply::input_address() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_tx_data_reply.input_address)
  return _internal_input_address();
}
inline void cmd_tx_data_reply::_internal_set_input_address(::PROTOBUF_NAMESPACE_ID::uint64 value) {

  input_address_ = value;
}
inline void cmd_tx_data_reply::set_input_address(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_input_address(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_tx_data_reply.input_address)
}

// -------------------------------------------------------------------

// cmd_get_data_reply

// uint32 preamble = 1;
inline void cmd_get_data_reply::clear_preamble() {
  preamble_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::_internal_preamble() const {
  return preamble_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::preamble() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_get_data_reply.preamble)
  return _internal_preamble();
}
inline void cmd_get_data_reply::_internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  preamble_ = value;
}
inline void cmd_get_data_reply::set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preamble(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_get_data_reply.preamble)
}

// uint32 len = 2;
inline void cmd_get_data_reply::clear_len() {
  len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::_internal_len() const {
  return len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::len() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_get_data_reply.len)
  return _internal_len();
}
inline void cmd_get_data_reply::_internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  len_ = value;
}
inline void cmd_get_data_reply::set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_len(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_get_data_reply.len)
}

// uint32 version = 3;
inline void cmd_get_data_reply::clear_version() {
  version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::version() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_get_data_reply.version)
  return _internal_version();
}
inline void cmd_get_data_reply::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  version_ = value;
}
inline void cmd_get_data_reply::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_get_data_reply.version)
}

// uint32 total_package_len = 4;
inline void cmd_get_data_reply::clear_total_package_len() {
  total_package_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::_internal_total_package_len() const {
  return total_package_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::total_package_len() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_get_data_reply.total_package_len)
  return _internal_total_package_len();
}
inline void cmd_get_data_reply::_internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  total_package_len_ = value;
}
inline void cmd_get_data_reply::set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_package_len(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_get_data_reply.total_package_len)
}

// uint32 seq = 5;
inline void cmd_get_data_reply::clear_seq() {
  seq_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::seq() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_get_data_reply.seq)
  return _internal_seq();
}
inline void cmd_get_data_reply::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  seq_ = value;
}
inline void cmd_get_data_reply::set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_get_data_reply.seq)
}

// uint32 flag = 6;
inline void cmd_get_data_reply::clear_flag() {
  flag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::_internal_flag() const {
  return flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::flag() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_get_data_reply.flag)
  return _internal_flag();
}
inline void cmd_get_data_reply::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  flag_ = value;
}
inline void cmd_get_data_reply::set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_get_data_reply.flag)
}

// uint32 cmd = 7;
inline void cmd_get_data_reply::clear_cmd() {
  cmd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_get_data_reply::cmd() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_get_data_reply.cmd)
  return _internal_cmd();
}
inline void cmd_get_data_reply::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  cmd_ = value;
}
inline void cmd_get_data_reply::set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_get_data_reply.cmd)
}

// string data = 8;
inline void cmd_get_data_reply::clear_data() {
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& cmd_get_data_reply::data() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_get_data_reply.data)
  return _internal_data();
}
inline void cmd_get_data_reply::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_get_data_reply.data)
}
inline std::string* cmd_get_data_reply::mutable_data() {
  // @@protoc_insertion_point(field_mutable:hpc.cmd_get_data_reply.data)
  return _internal_mutable_data();
}
inline const std::string& cmd_get_data_reply::_internal_data() const {
  return data_.Get();
}
inline void cmd_get_data_reply::_internal_set_data(const std::string& value) {

  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void cmd_get_data_reply::set_data(std::string&& value) {

  data_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:hpc.cmd_get_data_reply.data)
}
inline void cmd_get_data_reply::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);

  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:hpc.cmd_get_data_reply.data)
}
inline void cmd_get_data_reply::set_data(const char* value,
    size_t size) {

  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:hpc.cmd_get_data_reply.data)
}
inline std::string* cmd_get_data_reply::_internal_mutable_data() {

  return data_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* cmd_get_data_reply::release_data() {
  // @@protoc_insertion_point(field_release:hpc.cmd_get_data_reply.data)
  return data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void cmd_get_data_reply::set_allocated_data(std::string* data) {
  if (data != nullptr) {

  } else {

  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:hpc.cmd_get_data_reply.data)
}
inline std::string* cmd_get_data_reply::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hpc.cmd_get_data_reply.data)
  GOOGLE_DCHECK(GetArena() != nullptr);

  return data_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void cmd_get_data_reply::unsafe_arena_set_allocated_data(
    std::string* data) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (data != nullptr) {

  } else {

  }
  data_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      data, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hpc.cmd_get_data_reply.data)
}

// -------------------------------------------------------------------

// cmd_config_reply

// uint32 preamble = 1;
inline void cmd_config_reply::clear_preamble() {
  preamble_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::_internal_preamble() const {
  return preamble_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::preamble() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_config_reply.preamble)
  return _internal_preamble();
}
inline void cmd_config_reply::_internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  preamble_ = value;
}
inline void cmd_config_reply::set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preamble(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_config_reply.preamble)
}

// uint32 len = 2;
inline void cmd_config_reply::clear_len() {
  len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::_internal_len() const {
  return len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::len() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_config_reply.len)
  return _internal_len();
}
inline void cmd_config_reply::_internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  len_ = value;
}
inline void cmd_config_reply::set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_len(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_config_reply.len)
}

// uint32 version = 3;
inline void cmd_config_reply::clear_version() {
  version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::version() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_config_reply.version)
  return _internal_version();
}
inline void cmd_config_reply::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  version_ = value;
}
inline void cmd_config_reply::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_config_reply.version)
}

// uint32 total_package_len = 4;
inline void cmd_config_reply::clear_total_package_len() {
  total_package_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::_internal_total_package_len() const {
  return total_package_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::total_package_len() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_config_reply.total_package_len)
  return _internal_total_package_len();
}
inline void cmd_config_reply::_internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  total_package_len_ = value;
}
inline void cmd_config_reply::set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_package_len(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_config_reply.total_package_len)
}

// uint32 seq = 5;
inline void cmd_config_reply::clear_seq() {
  seq_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::seq() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_config_reply.seq)
  return _internal_seq();
}
inline void cmd_config_reply::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  seq_ = value;
}
inline void cmd_config_reply::set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_config_reply.seq)
}

// uint32 flag = 6;
inline void cmd_config_reply::clear_flag() {
  flag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::_internal_flag() const {
  return flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::flag() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_config_reply.flag)
  return _internal_flag();
}
inline void cmd_config_reply::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  flag_ = value;
}
inline void cmd_config_reply::set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_config_reply.flag)
}

// uint32 cmd = 7;
inline void cmd_config_reply::clear_cmd() {
  cmd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_config_reply::cmd() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_config_reply.cmd)
  return _internal_cmd();
}
inline void cmd_config_reply::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  cmd_ = value;
}
inline void cmd_config_reply::set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_config_reply.cmd)
}

// string config = 8;
inline void cmd_config_reply::clear_config() {
  config_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& cmd_config_reply::config() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_config_reply.config)
  return _internal_config();
}
inline void cmd_config_reply::set_config(const std::string& value) {
  _internal_set_config(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_config_reply.config)
}
inline std::string* cmd_config_reply::mutable_config() {
  // @@protoc_insertion_point(field_mutable:hpc.cmd_config_reply.config)
  return _internal_mutable_config();
}
inline const std::string& cmd_config_reply::_internal_config() const {
  return config_.Get();
}
inline void cmd_config_reply::_internal_set_config(const std::string& value) {

  config_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void cmd_config_reply::set_config(std::string&& value) {

  config_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:hpc.cmd_config_reply.config)
}
inline void cmd_config_reply::set_config(const char* value) {
  GOOGLE_DCHECK(value != nullptr);

  config_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:hpc.cmd_config_reply.config)
}
inline void cmd_config_reply::set_config(const char* value,
    size_t size) {

  config_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:hpc.cmd_config_reply.config)
}
inline std::string* cmd_config_reply::_internal_mutable_config() {

  return config_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* cmd_config_reply::release_config() {
  // @@protoc_insertion_point(field_release:hpc.cmd_config_reply.config)
  return config_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void cmd_config_reply::set_allocated_config(std::string* config) {
  if (config != nullptr) {

  } else {

  }
  config_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), config,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:hpc.cmd_config_reply.config)
}
inline std::string* cmd_config_reply::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hpc.cmd_config_reply.config)
  GOOGLE_DCHECK(GetArena() != nullptr);

  return config_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void cmd_config_reply::unsafe_arena_set_allocated_config(
    std::string* config) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (config != nullptr) {

  } else {

  }
  config_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      config, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hpc.cmd_config_reply.config)
}

// -------------------------------------------------------------------

// cmd_test_reg_reply

// uint32 preamble = 1;
inline void cmd_test_reg_reply::clear_preamble() {
  preamble_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::_internal_preamble() const {
  return preamble_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::preamble() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_test_reg_reply.preamble)
  return _internal_preamble();
}
inline void cmd_test_reg_reply::_internal_set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  preamble_ = value;
}
inline void cmd_test_reg_reply::set_preamble(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preamble(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_test_reg_reply.preamble)
}

// uint32 len = 2;
inline void cmd_test_reg_reply::clear_len() {
  len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::_internal_len() const {
  return len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::len() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_test_reg_reply.len)
  return _internal_len();
}
inline void cmd_test_reg_reply::_internal_set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  len_ = value;
}
inline void cmd_test_reg_reply::set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_len(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_test_reg_reply.len)
}

// uint32 version = 3;
inline void cmd_test_reg_reply::clear_version() {
  version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::version() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_test_reg_reply.version)
  return _internal_version();
}
inline void cmd_test_reg_reply::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  version_ = value;
}
inline void cmd_test_reg_reply::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_test_reg_reply.version)
}

// uint32 total_package_len = 4;
inline void cmd_test_reg_reply::clear_total_package_len() {
  total_package_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::_internal_total_package_len() const {
  return total_package_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::total_package_len() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_test_reg_reply.total_package_len)
  return _internal_total_package_len();
}
inline void cmd_test_reg_reply::_internal_set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  total_package_len_ = value;
}
inline void cmd_test_reg_reply::set_total_package_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_package_len(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_test_reg_reply.total_package_len)
}

// uint32 seq = 5;
inline void cmd_test_reg_reply::clear_seq() {
  seq_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::seq() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_test_reg_reply.seq)
  return _internal_seq();
}
inline void cmd_test_reg_reply::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  seq_ = value;
}
inline void cmd_test_reg_reply::set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_test_reg_reply.seq)
}

// uint32 flag = 6;
inline void cmd_test_reg_reply::clear_flag() {
  flag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::_internal_flag() const {
  return flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::flag() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_test_reg_reply.flag)
  return _internal_flag();
}
inline void cmd_test_reg_reply::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  flag_ = value;
}
inline void cmd_test_reg_reply::set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_test_reg_reply.flag)
}

// uint32 cmd = 7;
inline void cmd_test_reg_reply::clear_cmd() {
  cmd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 cmd_test_reg_reply::cmd() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_test_reg_reply.cmd)
  return _internal_cmd();
}
inline void cmd_test_reg_reply::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {

  cmd_ = value;
}
inline void cmd_test_reg_reply::set_cmd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_test_reg_reply.cmd)
}

// string reg = 8;
inline void cmd_test_reg_reply::clear_reg() {
  reg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& cmd_test_reg_reply::reg() const {
  // @@protoc_insertion_point(field_get:hpc.cmd_test_reg_reply.reg)
  return _internal_reg();
}
inline void cmd_test_reg_reply::set_reg(const std::string& value) {
  _internal_set_reg(value);
  // @@protoc_insertion_point(field_set:hpc.cmd_test_reg_reply.reg)
}
inline std::string* cmd_test_reg_reply::mutable_reg() {
  // @@protoc_insertion_point(field_mutable:hpc.cmd_test_reg_reply.reg)
  return _internal_mutable_reg();
}
inline const std::string& cmd_test_reg_reply::_internal_reg() const {
  return reg_.Get();
}
inline void cmd_test_reg_reply::_internal_set_reg(const std::string& value) {

  reg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void cmd_test_reg_reply::set_reg(std::string&& value) {

  reg_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:hpc.cmd_test_reg_reply.reg)
}
inline void cmd_test_reg_reply::set_reg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);

  reg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:hpc.cmd_test_reg_reply.reg)
}
inline void cmd_test_reg_reply::set_reg(const char* value,
    size_t size) {

  reg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:hpc.cmd_test_reg_reply.reg)
}
inline std::string* cmd_test_reg_reply::_internal_mutable_reg() {

  return reg_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* cmd_test_reg_reply::release_reg() {
  // @@protoc_insertion_point(field_release:hpc.cmd_test_reg_reply.reg)
  return reg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void cmd_test_reg_reply::set_allocated_reg(std::string* reg) {
  if (reg != nullptr) {

  } else {

  }
  reg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:hpc.cmd_test_reg_reply.reg)
}
inline std::string* cmd_test_reg_reply::unsafe_arena_release_reg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hpc.cmd_test_reg_reply.reg)
  GOOGLE_DCHECK(GetArena() != nullptr);

  return reg_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void cmd_test_reg_reply::unsafe_arena_set_allocated_reg(
    std::string* reg) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (reg != nullptr) {

  } else {

  }
  reg_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      reg, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hpc.cmd_test_reg_reply.reg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace hpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_hpc_2emsg
